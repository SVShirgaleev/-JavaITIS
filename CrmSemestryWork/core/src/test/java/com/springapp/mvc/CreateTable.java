package com.springapp.mvc;

import com.springapp.mvc.common.CategoryInfo;
import com.springapp.mvc.common.GoodInfo;
import com.springapp.mvc.repositories.CategoryRepository;
import com.springapp.mvc.repositories.GoodRepository;
import org.springframework.context.support.ClassPathXmlApplicationContext;

import java.io.IOException;
import java.math.BigDecimal;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;


public class CreateTable {

    public static void main(String[] args) {
        try {
            createTableGoods();
            createTableCategory();
            testInsert();
//            testUpdate();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private static Connection getConnection() throws IOException, ClassNotFoundException, SQLException {
        String url = "jdbc:h2:c:/Java/h2db/CrmSemestryWork";
        String user = "sa";
        String pass = "";
        Class.forName("org.h2.Driver");                       
        return DriverManager.getConnection(url, user, pass);  
    }

    private static void createTableGoods() throws SQLException, ClassNotFoundException, IOException {
        Connection connection = null;
        try {
            connection = getConnection();
            Statement statement = connection.createStatement();
            statement.executeUpdate("create table if not exists GOODS " +
                    "(id bigint GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY, " +
                    "name VARCHAR(50), description varchar(200), imageUrl VARCHAR(150), " +
                    "price DOUBLE(5), categoryId bigint(10))");
        } finally {
            if (connection != null) {
                connection.close();
            }
        }
    }

    private static void createTableCategory() throws SQLException, ClassNotFoundException, IOException {
        Connection connection = null;
        try {
            connection = getConnection();
            Statement statement = connection.createStatement();
            statement.executeUpdate("create table if not exists CATEGORY " +
                    "(id bigint GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY, " +
                    "name varchar(50), parentId bigint)");
        } finally {
            if (connection != null) {
                connection.close();
            }
        }
    }

    private static void testInsert() {
        init();
        CategoryInfo category = new CategoryInfo(1L, "Тестовая категория");
        categoryRepository.addCategory(category);
        goodRepository.addGood(new GoodInfo(1L, "крым", "Lorem ipsum dolor sit amet consectetur adipisicing.",
                "/images/111.jpg", category, new BigDecimal(100)));
        
    }

    private static void testUpdate() {
        init();
        CategoryInfo category = new CategoryInfo(1L, "Тестовая категория");
        goodRepository.updateGood(new GoodInfo(1L, "Новый тур", "Новое описание.",
                "/images/111.jpg", category, new BigDecimal(555)));
    }

    private static GoodRepository goodRepository;
    private static CategoryRepository categoryRepository;

    private static void init() {
        ClassPathXmlApplicationContext context = new ClassPathXmlApplicationContext(
                new String[] { "spring-jdbc.xml" }, true);
        goodRepository = context.getBean(GoodRepository.class);
        categoryRepository = context.getBean(CategoryRepository.class);
    }
}
